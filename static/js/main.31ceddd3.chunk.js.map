{"version":3,"sources":["contexts/AppContext.js","utils.js","components/EventForm.js","actions/index.js","components/Event.js","components/Events.js","components/OperationLog.js","components/OperationLogs.js","reducers/events.js","reducers/operationLogs.js","reducers/index.js","components/App.js","index.js"],"names":["AppContext","createContext","timeCurrentIso8601","Date","toISOString","EventForm","_useContext","useContext","state","dispatch","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","unCreatable","react_default","a","createElement","Fragment","className","htmlFor","id","value","onChange","e","target","onClick","preventDefault","type","description","operatedAt","disabled","window","confirm","events","length","operationLogs","Event","_ref","event","concat","Events","map","index","components_Event","key","operationLog","OperationLogs","OperationLog","arguments","undefined","action","toConsumableArray","objectSpread2","filter","combineReducers","App","appState","localStorage","getItem","initialState","JSON","parse","_useReducer","useReducer","reducer","_useReducer2","useEffect","setItem","stringify","contexts_AppContext","Provider","components_EventForm","components_Events","components_OperationLogs","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.31ceddd3.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","export const timeCurrentIso8601 = () => new Date().toISOString();\n","import React, { useState, useContext } from \"react\";\n\nimport {\n  CREATE_EVENT,\n  DELETE_ALL_EVENTS,\n  ADD_OPERATION_LOGS,\n  DELETE_ALL_OPERATION_LOGS,\n} from \"../actions\";\nimport AppContext from \"../contexts/AppContext\";\nimport { timeCurrentIso8601 } from \"../utils\";\n\nconst EventForm = () => {\n  // useContext\n  const { state, dispatch } = useContext(AppContext);\n  // useState\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  // 一覧に追加\n  const addEvent = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: CREATE_EVENT,\n      title: title,\n      body: body,\n    });\n    dispatch({\n      type: ADD_OPERATION_LOGS,\n      description: \"TODOを作成しました。\",\n      operatedAt: timeCurrentIso8601(),\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  // 全てのTODOを削除\n  const deleteAllEvent = (e) => {\n    e.preventDefault();\n    const result = window.confirm(\n      \"全てのTODOを本当に削除してもよろしいでしょうか？\"\n    );\n    if (result) {\n      dispatch({ type: DELETE_ALL_EVENTS });\n      dispatch({\n        type: ADD_OPERATION_LOGS,\n        description: \"全てのTODOを削除しました。\",\n        operatedAt: timeCurrentIso8601(),\n      });\n    }\n  };\n\n  // 全ての操作ログを削除\n  const deleteAllOperationLogs = (e) => {\n    e.preventDefault();\n    const result = window.confirm(\n      \"全ての操作ログを本当に削除してもよろしいでしょうか？\"\n    );\n    if (result) {\n      dispatch({ type: DELETE_ALL_OPERATION_LOGS });\n    }\n  };\n\n  // 作成ボタンのdisabled制御\n  const unCreatable = title === \"\" || body === \"\";\n\n  return (\n    <>\n      <h4>TODO管理</h4>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventTitle\">タイトル</label>\n          <input\n            className=\"form-control\"\n            id=\"formEventTitle\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"formEventBody\">詳細</label>\n          <textarea\n            className=\"form-control\"\n            id=\"formEventBody\"\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          />\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={addEvent}\n          disabled={unCreatable}\n        >\n          TODOを作成する\n        </button>\n        <button\n          className=\"btn btn-danger\"\n          onClick={deleteAllEvent}\n          disabled={state.events.length === 0}\n        >\n          全てのTODOを削除する\n        </button>\n        <button\n          className=\"btn btn-danger\"\n          onClick={deleteAllOperationLogs}\n          disabled={state.operationLogs.length === 0}\n        >\n          全ての操作ログを削除する\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default EventForm;\n","export const CREATE_EVENT = \"CREATE_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const DELETE_ALL_EVENTS = \"DELETE_ALL_EVENTS\";\n\nexport const ADD_OPERATION_LOGS = \"ADD_OPERATION_LOGS\";\nexport const DELETE_ALL_OPERATION_LOGS = \"DELETE_ALL_OPERATION_LOGS\";\n","import React, { useContext } from \"react\";\n\nimport { DELETE_EVENT, ADD_OPERATION_LOGS } from \"../actions\";\nimport AppContext from \"../contexts/AppContext\";\nimport { timeCurrentIso8601 } from \"../utils\";\n\nconst Event = ({ event }) => {\n  // useContext\n  const { dispatch } = useContext(AppContext);\n\n  const id = event.id;\n\n  // クリックしたTODOを削除\n  const handleClickDeleteButton = () => {\n    const result = window.confirm(\n      `ID:${id} のTODOを削除します。よろしいでしょうか？`\n    );\n    if (result) {\n      dispatch({\n        type: DELETE_EVENT,\n        id: id,\n      });\n      dispatch({\n        type: ADD_OPERATION_LOGS,\n        description: `ID:${id} のTODOを削除しました。`,\n        operatedAt: timeCurrentIso8601(),\n      });\n    }\n  };\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{event.title}</td>\n      <td>{event.body}</td>\n      <td>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={handleClickDeleteButton}\n        >\n          削除\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Event;\n","import React, { useContext } from \"react\";\n\nimport Event from \"./Event\";\nimport AppContext from \"../contexts/AppContext\";\n\nconst Events = () => {\n  // useContext\n  const { state } = useContext(AppContext);\n\n  return (\n    <>\n      <h4>TODO 一覧</h4>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>タイトル</th>\n            <th>詳細</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.events.map((event, index) => (\n            <Event key={index} event={event} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Events;\n","import React from \"react\";\n\nconst operationLog = ({ operationLog }) => {\n  return (\n    <tr>\n      <td>{operationLog.description}</td>\n      <td>{operationLog.operatedAt}</td>\n    </tr>\n  );\n};\n\nexport default operationLog;\n","import React, { useContext } from \"react\";\n\nimport OperationLog from \"./OperationLog\";\nimport AppContext from \"../contexts/AppContext\";\n\nconst OperationLogs = () => {\n  // useContext\n  const { state } = useContext(AppContext);\n\n  return (\n    <>\n      <h4>操作ログ 一覧</h4>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>操作内容</th>\n            <th>日時</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.operationLogs.map((operationLog, index) => (\n            <OperationLog key={index} operationLog={operationLog} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default OperationLogs;\n","import { CREATE_EVENT, DELETE_EVENT, DELETE_ALL_EVENTS } from \"../actions\";\n\nconst events = (state = [], action) => {\n  switch (action.type) {\n    case CREATE_EVENT:\n      const event = {\n        title: action.title,\n        body: action.body,\n      };\n      const length = state.length;\n      const id = length === 0 ? 1 : state[length - 1].id + 1;\n      return [...state, { id: id, ...event }];\n    case DELETE_EVENT:\n      return state.filter((event) => event.id !== action.id);\n    case DELETE_ALL_EVENTS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default events;\n","import { ADD_OPERATION_LOGS, DELETE_ALL_OPERATION_LOGS } from \"../actions\";\n\nconst operationLogs = (state = [], action) => {\n  switch (action.type) {\n    case ADD_OPERATION_LOGS:\n      const operationLog = {\n        description: action.description,\n        operatedAt: action.operatedAt,\n      };\n      return [operationLog, ...state];\n    case DELETE_ALL_OPERATION_LOGS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default operationLogs;\n","import { combineReducers } from \"redux\";\nimport events from \"./events\";\nimport operationLogs from \"./operationLogs\";\n\nexport default combineReducers({ events, operationLogs });\n","import React, { useEffect, useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport EventForm from \"./EventForm\";\nimport Events from \"./Events\";\nimport OperationLogs from \"./OperationLogs\";\nimport reducer from \"../reducers/index\";\nimport AppContext from \"../contexts/AppContext\";\n\nconst APP_KEY = \"appWithRedux\";\n\nconst App = () => {\n  // stateの初期値を変数化(localStorageに値がある場合は格納)\n  const appState = localStorage.getItem(APP_KEY);\n  const initialState = appState\n    ? JSON.parse(appState)\n    : {\n        events: [],\n        operationLogs: [],\n      };\n  // useReducer\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // useEffect\n  useEffect(() => {\n    localStorage.setItem(APP_KEY, JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"container\">\n        <EventForm />\n        <Events />\n        <OperationLogs />\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}